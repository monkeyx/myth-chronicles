en:
  errors:
    already_allied: "Already part of an alliance"
    already_taxed: "Already taxed this year"
    already_territory: "Already part of another settlement's territory"
    amulet_not_artefact: "Amulet is not an artefact"
    armour_not_artefact: "Armour is not an artefact"
    challenge_expired: "Challenge expired"
    insufficient_action_points: "Insufficient action points"
    insufficient_craft_rating: "Insufficient craft rating"
    insufficient_experience: "Insufficient experience points"
    insufficient_gold: "Insufficient gold"
    insufficient_hide: "Insufficient hide"
    insufficient_humanoids: "Insufficient humanoids"
    insufficient_iron: "Insufficient iron"
    insufficient_items: "Insufficient items"
    insufficient_loyalty: "Insufficient loyalty"
    insufficient_mana: "Insufficient mana"
    insufficient_renown: "Insufficient renown"
    insufficient_stone: "Insufficient stone"
    insufficient_wood: "Insufficient wood"
    invalid_alliance: "Invalid alliance"
    invalid_army: "Invalid army"
    invalid_attribute: "Invalid attribute"
    invalid_challenge: "Invalid challenge"
    invalid_character: "Invalid character"
    invalid_direction: "Invalid direction"
    invalid_equipment: "Invalid equipment"
    invalid_item: "Invalid item"
    invalid_location: "Invalid location"
    invalid_quantity: "Invalid quantity"
    invalid_position: "Invalid position as target"
    invalid_price: "Invalid price"
    invalid_settlement: "Invalid settlement"
    invalid_spell: "Invalid spell"
    invalid_tactic: "Invalid tactic"
    invalid_target: "Invalid target"
    invalid_training: "Invalid training"
    invalid_unit: "Invalid unit"
    loyalty_maxed: "Loyalty is at maximum"
    movement_impassable: "Cannot move into impassable terrain"
    movement_impossible: "Cannot move by land or air"
    movement_sea: "Cannot move into sea"
    not_friendly: "Not friendly target"
    not_friendly_location: "Not at a friendly location"
    not_in_alliance: "Not in an alliance"
    not_invited: "Not invited to the alliance"
    not_leader: "Not leader of alliance"
    not_enough_capitals: "Not enough capital cities"
    no_army: "No army"
    no_rights: "No rights to perform this action"
    no_permission: "No permission to perform this action"
    ring_not_artefact: "Ring is not an artefact"
    target_defended: "Target is defended by a friendly army"
    target_friendly: "Target is friendly"
    target_neutral: "Target is neutral"
    unit_healthy: "Unit is healthy"
    weapon_not_artefact: "Weapon is not an artefact"
  scouting:
    report: "Scouted %{army} at %{location} getting detailed reports on %{unit_count}"
  combat:
    nothing: "%{attacker_army} faced %{defender_army} but neither side engaged"
    fled: "%{army} fled to %{location}"
    loot: "Earned %{gold} gold for defeating %{army} at %{location}"
    razed: "%{settlement} at %{location} was razed by %{attacker}"
    round:
      long: "<strong>Round: Long Range</strong>"
      short: "<strong>Round: Short Range</strong>"
      melee: "<strong>Round: Melee %{round}</strong>"
    tactic:
      ambush: "[%{attacker_army}] %{attacker} ambushed [%{defender_army}] %{defender}"
      flank: "[%{attacker_army}] %{attacker} flanked [%{defender_army}] %{defender}"
      skirmish: "[%{attacker_army}] %{attacker} performed a hit and run on [%{defender_army}] %{defender}"
      skirmish-skirmish: "[%{attacker_army}] %{attacker} danced with [%{defender_army}] %{defender} looking for an opening"
      skirmish-wall: "[%{attacker_army}] %{attacker} skirmishers were met by a wall of [%{defender_army}] %{defender}"
      swarm-skirmish: "[%{attacker_army}] %{attacker} were outmaneuvered by [%{defender_army}] %{defender}"
      swarm-wall: "[%{attacker_army}] %{attacker} rushed the disciplined ranks of [%{defender_army}] %{defender}"
      wall: "[%{attacker_army}] %{attacker} marched in phalanx formation against [%{defender_army}] %{defender}"
      wall-skirmish: "[%{attacker_army}] %{attacker} formed a wedge against the skirmishing [%{defender_army}] %{defender}"
    unit:
      annihilated: "[%{attacker_army}] %{attacker} <strong>destroyed</strong> [%{defender_army}] %{defender}"
      critical:  "[%{attacker_army}] %{attacker} critically wounded [%{defender_army}] %{defender} - %{damage}% damage"
      severe:  "[%{attacker_army}] %{attacker} severely wounded [%{defender_army}] %{defender} - %{damage}% damage"
      wounded:  "[%{attacker_army}] %{attacker} wounded [%{defender_army}] %{defender} - %{damage}% damage"
      failed:  "[%{attacker_army}] %{attacker} attacked [%{defender_army}] %{defender} but failed to do any damage"
      bless_expired: "[%{unit_army}] %{unit} blessing expired"
      routed: "[%{unit_army}] %{unit} <strong>fled</strong> the battle"
  trade:
    buy: "Bought %{quantity} of %{item} at a cost of %{gold} gold"
    sell: "Sold %{quantity} of %{item} for %{gold} gold"
  cycles:
    character:
      regeneration: "%{character} regenerated action points to %{action_points} and mana points to %{mana_points}"
      challenge:
        expired: "Challenge from %{challenger} expired for %{character}"
        expired-challenger: "Challenge to %{character} from %{challenger} expired"
    army:
      units-healed: "%{count} damanged units in %{army} healed and %{fully_healed} are now fully healed"
      disbanded: "%{army} disbanded due to lack of units"
    settlement:
      resources-produced: "%{settlement} produced %{hides} hides, %{wood} wood, %{iron} iron and %{stone} stone"
      recruitment: "%{settlement} recruited %{quantity} of %{item}"
  actions:
    AcceptChallengeAction: 
      Success: "Accepted challenge from %{challenger} at #%{location}"
      Challenger: "Challenge to %{character} accepted"
    AcceptMembershipAction: 
      Success: "Accepted invitation to join %{alliance}"
      Joined: "%{character} joined %{alliance}"
    AttackArmyAction: 
      Success: "Attacked %{defender} at #%{location} - see <a href='/#/u/battles/%{battle_id}'>battle report</a>"
      Defender: "%{army} attacked %{defender} - see <a href='/#/u/battles/%{battle_id}'>battle report</a>"
    BecomeImmortalAction: "Became immortal!"
    BesiegeSettlementAction: 
      Success: "Put %{settlement} under siege"
      Settlement: "%{army} is besieging %{settlement}"
    BuyItemAction: "Buying %{quantity} x %{item} for %{price} gold each"
    ChangeNameAction: "%{old_name} will now be known as %{new_name}"
    CaptureSettlementAction: 
      Success: "Captured %{settlement} from %{previous_owner}"
      Owner: "%{settlement} lost to %{army}"
    CastSpellAction:
      Bless: "Cast bless on %{unit} giving a bless rating of %{bless_rating} at a cost of %{mana_spend} mana points"
      Heal: "Cast heal on %{unit} healing them by %{heal_points} at a cost of %{mana_spend} mana points"
      RitualMundane: "Cast ritual to create %{quantity} x %{item} in %{settlement} at a cost of %{mana_spend} mana points"
      RitualMagic: "Crafted a magic item %{item} at a cost of %{mana_spend} and 1 craft rating"
      Scry: "Scouted %{target} at a cost of %{mana_spend} mana points"
      Teleport: "Teleported to #%{target} at a cost of %{mana_spend} mana points"
    ChallengeCharacterAction: 
      Success: "Challenged %{other} to a fight at #%{location}"
      Other: "%{character} issued a personal challenge to %{other}"
    CreateArmyAction: "Created new army %{new_army} with unit %{unit}"
    CreateUnitAction: "Created new unit %{unit} in army %{army} at #%{location}"
    DistributeGoodsAction: "Distributed %{quantity} of %{item} to population improving their loyalty to %{loyalty}"
    EquipMagicAction: "Equipped %{item} improve %{stat} by %{modifier}"
    EquipUnitAction: "%{unit} equipped %{item}"
    ExpandCityAction: "Expanded population of %{item} by %{quantity} to %{size}"
    ExploreDungeonAction:
      SuccessWithRenownAndMagicItem: "Exploring the %{level} level in the %{dungeon}, overcame the challenge of %{challenge_type} finding one %{magic_item} and %{gold} gold plus earning 1 renown"
      SuccessWithMagicItem: "Exploring the %{level} level in the %{dungeon}, overcame the challenge of %{challenge_type} finding one %{magic_item} and %{gold} gold"
      SuccessWithRenown: "Exploring the %{level} level in the %{dungeon}, overcame the challenge of %{challenge_type} finding %{gold} gold and earning 1 renown"
      Success: "Exploring the %{level} level, overcame the challenge of %{challenge_type} in the %{dungeon} finding %{gold} gold"
      Failure: "Whilst exploring the %{level} level, could not overcome the challenge of %{challenge_type} in the %{dungeon}"
      Incapacitated: "Incapacitated due to the challenge of %{challenge_type} whilst exploring the %{level} level in the %{dungeon}"
      Death: "Died due to the challenge of %{challenge_type} whilst exploring the %{level} level in the %{dungeon}"
    FormAllianceAction: "Formed a new alliance %{alliance}"
    FormSettlementAction: "Formed a new %{settlement_type} at #%{location} called %{settlement}"
    GivePermissionsAction: 
      Full: "Gave %{target} full permissions to pickup any item"
      Pickup: "Gave %{target} permission to pickup %{quantity} x %{item}"
      Position-Full: "%{settlement} gave %{target} full permissions to its inventory"
      Position-Item: "%{settlement} gave %{target} permission to collect %{quantity} of %{item}"
    GuardSettlementAction: 
      Success: "Guarding %{settlement} at #%{location}"
      Settlement: "%{army} is guarding %{settlement}"
    ImproveDefencesAction: "Improved defences to %{defence_rating} at a cost %{cost} Stone"
    InspireCityAction: 
      Success: "Inspired the city of %{settlement} to loyalty of %{loyalty}"
      Settlement: "%{character} inspired %{settlement} to %{loyalty} loyalty"
    InviteMemberAction: 
      Success: "Invited %{character} to join %{alliance} alliance"
      Character: "%{inviter} invited %{character} to join %{alliance} alliance"
    KickMemberAction: 
      Success: "Kicked %{character} from %{alliance} alliance"
      Character: "%{kicker} kicked %{character} from %{alliance} alliance"
    LeaveAllianceAction: 
      Success: "Left %{alliance} alliance"
      Left: "%{character} left %{alliance} alliance"
    LeaveArmyAction: "Left %{old_army} to join %{army} at #%{location}"
    MoveArmyAction: "Moved into %{terrain} at #%{location}"
    PermitMemberAciton:
      GiveNews: "Gave %{character} permission to publish news on behalf of the alliance"
      RevokeNews: "Revoked permission to publish news from %{character}"
      GiveInvite: "Gave %{character} permission to invite new members to the alliance"
      RevokeInvite: "Revoked permission to invite new members from %{character}"
      GiveKick: "Gave %{character} permission to kick members from the alliance"
      RevokeKick: "Revoked permission to kick members from %{character}"
      Character: "%{character} rights in %{alliance} alliance have changed"
    PickupItemsAction:
      Success: "Picked up %{quantity} of %{item} from %{settlement}"
      Settlement: "%{army} picked up %{quantity} of %{item} from %{settlement}"
    ProduceItemAction: "Produced %{quantity} of %{item}"
    PublishNewsAction: "Published alliance news:\n%{news}"
    RallyTroopsAction: "Rallied troops in %{unit} of %{army}"
    RazeSettlementAction:
      Success: "Razed %{settlement} to destruction"
      Failure: "Failed to destroy %{settlement}, reduced defence rating to %{defence_rating}"
      Razed: "%{settlement} was destroyed by %{army}"
      Damaged: "%{settlement} fortification was damaged by %{army} to defence racting to %{defence_rating}"
    RecruitHumanoidsAction: "Recruited %{quantity} of %{race} at %{location}"
    SellItemAction: "Selling %{quantity} x %{item} at %{price} gold each"
    ScoutHexAction: 
      Success: "Scouted %{hex} and found %{army_count}"
      Failure: "Scouted %{hex} but found no other armies"
    SpendExperienceAction: "Improved %{attribute} to %{value} using %{cost} experience points"
    SubvertCityAction:
      Success: "Subverted %{settlement}"
      Failure: "Failed to subvert %{settlement}"
      Owner: "%{settlement} was subverted to the cause of %{character}"
    TaxCityAction: "Taxed population for %{gold} gold bringing their loyalty to %{loyalty}"
    TrainUnitAction: "Trained %{unit} in %{training} at a cost of %{cost} gold"
    TransferGoldAction: 
      Success: "Transfered %{amount} gold to %{character}"
      Character: "%{giver} transferred %{amount} gold to %{character}"
    TransferItemAction: 
      Success: "Transferred %{quantity} of %{item} to %{target}"
      Target: "%{giver} transferred %{quantity} of %{item} to %{target}"
    TransferLeadershipAction: 
      Success: "Transferred leadership of %{alliance} to %{character}"
      Character: "%{giver} transferred leadership of %{alliance} alliance to %{character}"
    TransferPositionAction: 
      Success: "Transferred %{position} to %{character}"
      Character: "%{giver} transferred %{position} to %{character}"
    TransferUnitAction: 
      Success: "Transferred %{unit} to %{army}"
      Army: "%{giver} transferred %{unit} to %{army}"
    UnitTacticsAction: "%{unit} adopted %{tactic} tactic"